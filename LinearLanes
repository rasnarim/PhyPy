{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6aef65c4-7be5-4ab9-a83d-1762a24b7ea9",
   "metadata": {},
   "source": [
    "### 1. Introduction to One-Dimensional Motion\n",
    "\n",
    "#### Overview of Motion in Physics\n",
    "üèÉ‚Äç‚ôÇÔ∏è **Motion in physics** refers to the change in position of an object over time. In one-dimensional motion, this change occurs along a straight line. üöó For example, imagine a car driving down a straight road, üöÇ a train traveling along a straight track, or üõó an elevator moving up and down a building. These are all instances of one-dimensional motion where the object's position changes along a single axis (either horizontal or vertical).\n",
    "\n",
    "#### Importance of Python in Analyzing Motion\n",
    "üêç **Python** is a powerful tool that allows us to simulate and visualize motion, making it easier to understand the dynamics of moving objects. For instance, consider the üöÇ train on a straight track: using Python, we can model how the train's speed changes over time, how far it travels, and how it accelerates or decelerates. By turning theoretical physics into code, Python helps bridge the gap between abstract concepts and real-world applications. üåê\n",
    "\n",
    "#### Connecting Concepts: Physics and Programming\n",
    "üîó In this notebook, we will translate the equations of motion into Python code to simulate and analyze different scenarios. For example, we might simulate the motion of an üõó elevator moving between floors, or a üöÇ train accelerating along its tracks. By programming these scenarios, we can visualize how different factors‚Äîsuch as speed, acceleration, and time‚Äîaffect the motion of objects in one dimension. üöÄ\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "986610e0-4d43-486d-9246-9e92ad20c426",
   "metadata": {},
   "source": [
    "## üõë Position-Time (x-t) Plot for an Object at Rest\n",
    "\n",
    "When an object is at rest, its position does not change over time. The position $x$ remains constant for all values of time $t$.\n",
    "\n",
    "### üí° Example:\n",
    "Consider an object at rest at position $x = 5$ meters. Mathematically, this is represented as:\n",
    "\n",
    "$$\n",
    "x(t) = 5\n",
    "$$\n",
    "\n",
    "In the x-t plot, this is shown as a horizontal line, indicating no change in position as time progresses.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1b10b984-43ce-404c-aa22-3d494af62156",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Position of the object (constant)\n",
    "x = np.full_like(t, 5)\n",
    "\n",
    "# Plotting the x-t graph\n",
    "plt.plot(t, x, label='Object at Rest')\n",
    "plt.xlabel('Time (t) [s]')\n",
    "plt.ylabel('Position (x) [m]')\n",
    "plt.title('Position-Time Plot for an Object at Rest')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bfd994a-9289-4935-a772-d396b4db30b1",
   "metadata": {},
   "source": [
    "## üöó Position-Time (x-t) Plot for an Object Moving with Constant Speed\n",
    "\n",
    "When an object moves with constant speed, its position changes linearly over time. This motion is characterized by a straight line in the x-t plot.\n",
    "\n",
    "### üí° Example:\n",
    "Consider an object moving at a constant speed of 2 m/s. If it starts from position $x = 0$ at time $t = 0$, the position function is:\n",
    "\n",
    "$$\n",
    "x(t) = 2t\n",
    "$$\n",
    "\n",
    "The x-t plot for this motion is a straight line, where the slope corresponds to the speed of the object.\n",
    "\n",
    "### üìù Note:\n",
    "The following code is not meant to be fully understood at this stage. Its purpose is to help you visualize the difference between an object at rest and an object moving with a constant velocity.\n",
    "\n",
    "Don't worry if you don't understand all the details of the code right now. The key is to see how changing certain parameters affects the plot. Feel free to experiment by modifying the parameters and observe how the motion of the objects changes in the graph.\n",
    "\n",
    "üîç **Remember:** This is an opportunity to explore and get a feel for the concepts we are discussing.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "872fc4e9-3b87-472a-9484-cfd1f8b21cf8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Object 1: At rest (constant position)\n",
    "x_rest = np.full_like(t, 5)\n",
    "\n",
    "# Object 2: Moving with constant speed (2 m/s)\n",
    "v = 2  # Speed in m/s\n",
    "x_move = v * t\n",
    "\n",
    "# Plotting both x-t graphs\n",
    "plt.plot(t, x_rest, label='Object at Rest', linestyle='--', color='blue')\n",
    "plt.plot(t, x_move, label='Object with Constant Speed', linestyle='-', color='orange')\n",
    "\n",
    "# Adding labels, title, and grid\n",
    "plt.xlabel('Time (t) [s]')\n",
    "plt.ylabel('Position (x) [m]')\n",
    "plt.title('Position-Time Plot for Two Objects')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "\n",
    "# Define t_0 and x_0\n",
    "t_0 = 6  # Starting time\n",
    "x_0 = v * t_0  # Starting position on the trend line\n",
    "\n",
    "# Length of delta t and increase it by a bit for visibility\n",
    "l = 2\n",
    "# Calculate delta x, also extended accordingly\n",
    "delta_x = v * l  # since v = delta_x / delta_t\n",
    "\n",
    "# Final position for delta_x\n",
    "t_final = t_0 + l\n",
    "x_final = x_0 + delta_x\n",
    "\n",
    "# Annotating the graph for Œît and Œîx, pointing to the middle of the vectors with longer arrows\n",
    "plt.annotate(\n",
    "    r'$\\Delta t$', \n",
    "    xy=(t_0 + l / 2, x_0), \n",
    "    xytext=(t_0 + l / 2, x_0 - 2),\n",
    "    arrowprops=dict(facecolor='black', shrink=0.1, width=0.5, headwidth=2, headlength=5),\n",
    "    ha='center'\n",
    ")\n",
    "plt.annotate(\n",
    "    r'$\\Delta x$', \n",
    "    xy=(t_final, (x_0 + x_final) / 2), \n",
    "    xytext=(t_final + 0.5, (x_0 + x_final) / 2 + 1),\n",
    "    arrowprops=dict(facecolor='black', shrink=0.1, width=0.5, headwidth=2, headlength=5),\n",
    "    ha='center'\n",
    ")\n",
    "\n",
    "# Plotting the delta t and delta x vectors with increased lengths\n",
    "plt.plot([t_0, t_0 + l], [x_0, x_0], 'k--', lw=1)   # Horizontal line for Œît\n",
    "plt.plot([t_final, t_final], [x_0, x_final], 'k--', lw=1)  # Vertical line for Œîx\n",
    "\n",
    "# Display the speed as a slope\n",
    "plt.text((t_0 + t_final) / 2, (x_0 + x_final) / 2 + 1.5, \n",
    "         r'$v = \\frac{\\Delta x}{\\Delta t} = 2 \\, \\mathrm{m/s}$', fontsize=10, ha='center')\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71dbd4d5-ee72-4984-bb9a-f520443952a6",
   "metadata": {},
   "source": [
    "## ‚ö° Definition of Speed\n",
    "\n",
    "Speed $v$ is defined as the distance traveled per unit time. It is a scalar quantity, meaning it only has magnitude and no direction. The formula for speed is:\n",
    "\n",
    "$$\n",
    "v = \\frac{\\Delta x}{\\Delta t}\n",
    "$$\n",
    "\n",
    "where $\\Delta x$ is the change in position and $\\Delta t$ is the change in time.\n",
    "\n",
    "In the context of the x-t plot, the speed is represented by the slope of the line. A steeper slope indicates a higher speed.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef534355-0f60-467b-ba89-c6cda62a9bfe",
   "metadata": {},
   "source": [
    "## üèÅ Exercise: Plotting Two Moving Objects\n",
    "\n",
    "The following code plots the position-time graph for an object at rest. Your task is to modify the code to plot two different moving objects: one moving at a speed of 2 m/s and the other at a speed of 3 m/s.\n",
    "\n",
    "### üíª Original Code:\n",
    "\n",
    "```python\n",
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Position of the object (constant)\n",
    "x = np.full_like(t, 5)\n",
    "\n",
    "# Plotting the x-t graph\n",
    "plt.plot(t, x, label='Object at Rest')\n",
    "plt.xlabel('Time (t) [s]')\n",
    "plt.ylabel('Position (x) [m]')\n",
    "plt.title('Position-Time Plot for an Object at Rest')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a4f40c95-6c7e-465f-8955-6e41bfdba433",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# your code goes here."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee178ff4-68e2-47a5-b0b3-29047b623ca3",
   "metadata": {},
   "source": [
    "## üöÄ Initial Speed and Initial Position\n",
    "\n",
    "When analyzing motion, it's important to consider not just the speed at which an object is moving but also where it started and how fast it was moving initially. These concepts are referred to as initial position ($x_0$) and initial speed ($v_0$).\n",
    "\n",
    "### üìè Position with Initial Speed and Initial Position\n",
    "\n",
    "If an object has an initial position $x_0$ and an initial speed $v_0$, and it continues to move with a constant speed $v$, its position $x(t)$ as a function of time is given by:\n",
    "\n",
    "$$\n",
    "x(t) = x_0 + v_0 t\n",
    "$$\n",
    "\n",
    "- $x_0$ is the initial position of the object.\n",
    "- $v_0$ is the initial speed of the object at time $t = 0$.\n",
    "- $t$ is the time elapsed.\n",
    "\n",
    "### üí° Example:\n",
    "\n",
    "For an object with an initial speed of 2 m/s and an initial position $x_0 = 5$ meters, the position at any time $t$ is:\n",
    "\n",
    "$$\n",
    "x(t) = 5 + 2t\n",
    "$$\n",
    "\n",
    "This equation shows how the object's position depends on both where it started and how fast it was moving initially.\n",
    "\n",
    "### üèÅ Exercise: Incorporating Initial Speed and Initial Position\n",
    "\n",
    "Modify the following code to include both initial speed and initial position in the position-time equation. Plot the position-time graph for two objects:\n",
    "- Object 1: Initial position of 0 meters, initial speed of 2 m/s, and moving with constant speed 2 m/s.\n",
    "- Object 2: Initial position of 5 meters, initial speed of 1 m/s, and moving with constant speed 3 m/s.\n",
    "\n",
    "üìä **TODO:** Use the graph to estimate where the two objects meet each other.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e5e95238-9dfb-4f13-85c2-70f8fdf5ac26",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Object 1: Fill in the initial position and speed\n",
    "x0_1 = _____  # Initial position of object 1\n",
    "v0_1 = _____  # Initial speed of object 1\n",
    "x1 = x0_1 + _____ * t  # Calculate position of object 1\n",
    "\n",
    "# Object 2: Fill in the initial position and speed\n",
    "x0_2 = _____  # Initial position of object 2\n",
    "v0_2 = _____  # Initial speed of object 2\n",
    "x2 = x0_2 + _____ * t  # Calculate position of object 2\n",
    "\n",
    "# Plotting both x-t graphs\n",
    "plt.plot(t, x1, label='Object 1: x_0 = _____ m, v_0 = _____ m/s', linestyle='-', color='blue')\n",
    "plt.plot(t, x2, label='Object 2: x_0 = _____ m, v_0 = _____ m/s', linestyle='--', color='green')\n",
    "\n",
    "# Adding labels, title, and grid\n",
    "plt.xlabel('Time (t) [s]')\n",
    "plt.ylabel('Position (x) [m]')\n",
    "plt.title('Position-Time Plot for Two Moving Objects')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "824faff1-56bc-46fa-b6b0-8a6cbd715859",
   "metadata": {},
   "source": [
    "## üöÄ Exercise: Simulating a Change in Speed\n",
    "\n",
    "In this exercise, you'll simulate the motion of an object that moves at a speed of 2 m/s for the first 3 seconds, and then increases its speed to 4 m/s. You'll need to calculate the position of the object over time and plot the resulting position-time graph. üìà\n",
    "\n",
    "### üìù Your Task:\n",
    "- ‚è±Ô∏è For the first 3 seconds, calculate the position using a speed of 2 m/s.\n",
    "- ‚è© After 3 seconds, update the speed to 4 m/s and continue calculating the position based on the new speed.\n",
    "- üñºÔ∏è Plot the entire motion on a position-time graph.\n",
    "\n",
    "Fill in the gaps in the code below: ‚¨áÔ∏è\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "81750b5f-2226-46c8-9d34-cb6dacd43b53",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "\n",
    "\n",
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Initialize the position array\n",
    "x = np.zeros_like(t)\n",
    "\n",
    "# Speed values\n",
    "v1 = ___  # Speed during the first part\n",
    "v2 = ___  # Speed after the change\n",
    "\n",
    "# Time of speed change\n",
    "t_change = ___  # Time when speed changes\n",
    "\n",
    "# Calculate position for the first part and after the speed change\n",
    "for i in range(len(t)):\n",
    "    if t[i] <= t_change:\n",
    "        x[i] = v1 * t[i]\n",
    "    else:\n",
    "        # Position after speed change, taking into account the position at t_change\n",
    "        x[i] = ___ + v2 * (t[i] - ___)\n",
    "\n",
    "# Create the plotly figure\n",
    "fig = go.Figure()\n",
    "\n",
    "# Add the position-time data to the plot\n",
    "fig.add_trace(go.Scatter(x=t, y=x, mode='lines', name='Object with changing speed'))\n",
    "\n",
    "# Add axis labels and title\n",
    "fig.update_layout(\n",
    "    title=\"Interactive Position-Time Plot\",\n",
    "    xaxis_title=\"Time (t) [s]\",\n",
    "    yaxis_title=\"Position (x) [m]\",\n",
    "    hovermode=\"x\",\n",
    "    template=\"plotly_white\"\n",
    ")\n",
    "\n",
    "# Show the plot\n",
    "fig.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b66ec8ca-4006-4ed5-8754-7a75af167bad",
   "metadata": {},
   "source": [
    "## üßÆ (Optional) Exercise: When Does the Object Pass Through the Origin?\n",
    "\n",
    "### üåü Scenario:\n",
    "An object is initially located at $x_0 = 5$ meters. It starts moving with a velocity of 4 m/s. After 2 seconds, the object changes direction and moves with a velocity of -2 m/s.\n",
    "\n",
    "### üéØ Your Task:\n",
    "Determine when the object passes through the origin (i.e., when $x = 0$).\n",
    "\n",
    "### üõ†Ô∏è Steps:\n",
    "\n",
    "1. **Calculate the Position:**\n",
    "   - ‚è±Ô∏è For the first 2 seconds, the object moves with a velocity of 4 m/s.\n",
    "   - üîÑ After 2 seconds, the object changes direction and moves with a velocity of -2 m/s.\n",
    "\n",
    "2. **Implement the Code:**\n",
    "   - üßë‚Äçüíª Calculate the position for the first 2 seconds using the initial velocity.\n",
    "   - üìù After 2 seconds, update the position using the new velocity.\n",
    "   - üìä Plot the position-time graph and determine when the object crosses $x = 0$.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "902f3a66-4da1-48f3-a512-88507286bdb8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "import numpy as np\n",
    "\n",
    "# Time values from 0 to 10 seconds (adjust if needed)\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Initialize the position array\n",
    "x = ___\n",
    "\n",
    "# Initial position and speed values\n",
    "x0 = ___  # Initial position\n",
    "v1 = ___  # Speed during the first part\n",
    "v2 = ___  # Speed after the direction change\n",
    "\n",
    "# Time of speed change\n",
    "t_change = ___  # Time when speed changes\n",
    "\n",
    "# Calculate position for the first part and after the speed change\n",
    "for i in range(len(t)):\n",
    "    if t[i] <= ____:\n",
    "        x[i] = _____ + _____ * t[i]  # Position during the first part\n",
    "    else:\n",
    "        # Position after speed change, taking into account the position at t_change\n",
    "        x[i] = (_____ + _____ * t_change) + _____ * (t[i] - _____)\n",
    "\n",
    "# Create the plotly figure\n",
    "fig = go.Figure()\n",
    "\n",
    "# Add the position-time data to the plot\n",
    "fig.add_trace(go.Scatter(x=t, y=x, mode='lines', name='Object with changing speed'))\n",
    "\n",
    "# Add axis labels and title\n",
    "fig.update_layout(\n",
    "    title=\"Position-Time Plot for an Object Changing Direction\",\n",
    "    xaxis_title=\"Time (t) [s]\",\n",
    "    yaxis_title=\"Position (x) [m]\",\n",
    "    hovermode=\"x\",\n",
    "    template=\"plotly_white\"\n",
    ")\n",
    "\n",
    "# Show the plot\n",
    "fig.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db02fbdb-f77c-485a-8b00-f2110e7114fc",
   "metadata": {},
   "source": [
    "## üöó Introducing Acceleration\n",
    "\n",
    "### üîÑ Recap: Constant Speed\n",
    "So far, we have worked with cases where the speed was constant. In such cases, the object moves at a steady rate, and the position changes linearly over time.\n",
    "\n",
    "### üõ£Ô∏è Transition: Variable Speed\n",
    "Now, let's consider situations where the speed is not constant. In these cases, the object's velocity changes over time, which is where the concept of acceleration comes in.\n",
    "\n",
    "### ‚ö° What is Acceleration?\n",
    "Acceleration is the rate at which an object's velocity changes over time. When an object is accelerating, its velocity is not constant but changes according to the acceleration. This leads to a nonlinear change in position over time.\n",
    "\n",
    "The relationship between position, velocity, and acceleration can be described by the following equations:\n",
    "\n",
    "### üèÉ‚Äç‚ôÇÔ∏è Velocity as a Function of Time:\n",
    "$$\n",
    "v(t) = v_0 + a \\cdot t\n",
    "$$\n",
    "Where:\n",
    "- $v(t)$ is the velocity at time $t$.\n",
    "- $v_0$ is the initial velocity.\n",
    "- $a$ is the constant acceleration.\n",
    "\n",
    "### üõ§Ô∏è Position as a Function of Time:\n",
    "$$\n",
    "x(t) = x_0 + v_0 \\cdot t + \\frac{1}{2} a \\cdot t^2\n",
    "$$\n",
    "Where:\n",
    "- $x(t)$ is the position at time $t$.\n",
    "- $x_0$ is the initial position.\n",
    "- $v_0$ is the initial velocity.\n",
    "- $a$ is the constant acceleration.\n",
    "\n",
    "## üß© Exercise: Simulating Motion with Acceleration\n",
    "\n",
    "### üéØ Scenario:\n",
    "An object is initially located at $x_0 = 5$ meters. It starts with an initial velocity of 2 m/s and accelerates at a constant rate of 1 m/s¬≤. Determine the position of the object over time and when it reaches a certain position.\n",
    "\n",
    "### üìù Your Task:\n",
    "\n",
    "1. **Calculate the Position**:\n",
    "   - Use the equation $x(t) = x_0 + v_0 \\cdot t + \\frac{1}{2} a \\cdot t^2$ to calculate the position of the object over time.\n",
    "\n",
    "2. **Implement the Code**:\n",
    "   - Fill in the gaps in the code to simulate the motion of the object under constant acceleration.\n",
    "   - Plot the position-time graph to visualize how the object‚Äôs position changes over time.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f3590a37-2350-4c89-b104-db85f6acf187",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "mode": "lines",
         "name": "Object with constant acceleration",
         "type": "scatter",
         "x": [
          0,
          0.10101010101010101,
          0.20202020202020202,
          0.30303030303030304,
          0.40404040404040403,
          0.5050505050505051,
          0.6060606060606061,
          0.7070707070707071,
          0.8080808080808081,
          0.9090909090909091,
          1.0101010101010102,
          1.1111111111111112,
          1.2121212121212122,
          1.3131313131313131,
          1.4141414141414141,
          1.5151515151515151,
          1.6161616161616161,
          1.7171717171717171,
          1.8181818181818181,
          1.9191919191919191,
          2.0202020202020203,
          2.121212121212121,
          2.2222222222222223,
          2.323232323232323,
          2.4242424242424243,
          2.525252525252525,
          2.6262626262626263,
          2.727272727272727,
          2.8282828282828283,
          2.929292929292929,
          3.0303030303030303,
          3.131313131313131,
          3.2323232323232323,
          3.3333333333333335,
          3.4343434343434343,
          3.5353535353535355,
          3.6363636363636362,
          3.7373737373737375,
          3.8383838383838382,
          3.9393939393939394,
          4.040404040404041,
          4.141414141414141,
          4.242424242424242,
          4.343434343434343,
          4.444444444444445,
          4.545454545454545,
          4.646464646464646,
          4.747474747474747,
          4.848484848484849,
          4.94949494949495,
          5.05050505050505,
          5.151515151515151,
          5.252525252525253,
          5.353535353535354,
          5.454545454545454,
          5.555555555555555,
          5.656565656565657,
          5.757575757575758,
          5.858585858585858,
          5.959595959595959,
          6.0606060606060606,
          6.161616161616162,
          6.262626262626262,
          6.363636363636363,
          6.4646464646464645,
          6.565656565656566,
          6.666666666666667,
          6.767676767676767,
          6.8686868686868685,
          6.96969696969697,
          7.070707070707071,
          7.171717171717171,
          7.2727272727272725,
          7.373737373737374,
          7.474747474747475,
          7.575757575757575,
          7.6767676767676765,
          7.777777777777778,
          7.878787878787879,
          7.979797979797979,
          8.080808080808081,
          8.181818181818182,
          8.282828282828282,
          8.383838383838384,
          8.484848484848484,
          8.585858585858587,
          8.686868686868687,
          8.787878787878787,
          8.88888888888889,
          8.98989898989899,
          9.09090909090909,
          9.191919191919192,
          9.292929292929292,
          9.393939393939394,
          9.494949494949495,
          9.595959595959595,
          9.696969696969697,
          9.797979797979798,
          9.8989898989899,
          10
         ],
         "y": [
          5,
          5.2071217222732376,
          5.424446485052545,
          5.651974288337925,
          5.889705132129374,
          6.1376390164268955,
          6.395775941230487,
          6.664115906540149,
          6.942658912355882,
          7.231404958677686,
          7.530354045505561,
          7.839506172839506,
          8.158861340679522,
          8.48841954902561,
          8.828180797877767,
          9.178145087235997,
          9.538312417100295,
          9.908682787470665,
          10.289256198347108,
          10.680032649729618,
          11.081012141618203,
          11.492194674012856,
          11.91358024691358,
          12.345168860320376,
          12.786960514233241,
          13.238955208652177,
          13.701152943577187,
          14.173553719008263,
          14.656157534945415,
          15.148964391388633,
          15.651974288337925,
          16.165187225793286,
          16.688603203754717,
          17.222222222222225,
          17.766044281195796,
          18.32006938067544,
          18.884297520661157,
          19.458728701152943,
          20.0433629221508,
          20.638200183654728,
          21.243240485664728,
          21.858483828180795,
          22.48393021120294,
          23.11957963473115,
          23.765432098765434,
          24.42148760330578,
          25.08774614835221,
          25.764207733904705,
          26.45087235996327,
          27.147740026527906,
          27.85481073359861,
          28.572084481175388,
          29.29956126925824,
          30.03724109784716,
          30.785123966942145,
          31.54320987654321,
          32.31149882665034,
          33.08999081726355,
          33.878685848382815,
          34.67758392000816,
          35.486685032139576,
          36.30598918477706,
          37.13549637792062,
          37.97520661157024,
          38.82511988572594,
          39.68523620038772,
          40.55555555555556,
          41.436077951229464,
          42.32680338740944,
          43.2277318640955,
          44.13886338128762,
          45.06019793898581,
          45.99173553719008,
          46.93347617590042,
          47.88541985511682,
          48.84756657483929,
          49.819916335067845,
          50.80246913580247,
          51.79522497704316,
          52.79818385878991,
          53.81134578104276,
          54.83471074380165,
          55.86827874706661,
          56.91204979083767,
          57.96602387511478,
          59.03020099989797,
          60.10458116518723,
          61.18916437098254,
          62.283950617283956,
          63.388939904091416,
          64.50413223140495,
          65.62952759922457,
          66.76512600755025,
          67.91092745638201,
          69.06693194571983,
          70.23313947556372,
          71.40955004591369,
          72.59616365676972,
          73.79298030813183,
          75
         ]
        }
       ],
       "layout": {
        "autosize": true,
        "hovermode": "x",
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "white",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "#C8D4E3",
             "linecolor": "#C8D4E3",
             "minorgridcolor": "#C8D4E3",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "white",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#C8D4E3"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "white",
          "polar": {
           "angularaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           },
           "bgcolor": "white",
           "radialaxis": {
            "gridcolor": "#EBF0F8",
            "linecolor": "#EBF0F8",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "yaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           },
           "zaxis": {
            "backgroundcolor": "white",
            "gridcolor": "#DFE8F3",
            "gridwidth": 2,
            "linecolor": "#EBF0F8",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#EBF0F8"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           },
           "bgcolor": "white",
           "caxis": {
            "gridcolor": "#DFE8F3",
            "linecolor": "#A2B1C6",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#EBF0F8",
           "linecolor": "#EBF0F8",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#EBF0F8",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Position-Time Plot with Constant Acceleration"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0,
          10
         ],
         "title": {
          "text": "Time (t) [s]"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          1.1111111111111112,
          78.88888888888889
         ],
         "title": {
          "text": "Position (x) [m]"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"984a2fbf-7e4f-446a-b1cf-21d0cce070f5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"984a2fbf-7e4f-446a-b1cf-21d0cce070f5\")) {                    Plotly.newPlot(                        \"984a2fbf-7e4f-446a-b1cf-21d0cce070f5\",                        [{\"mode\":\"lines\",\"name\":\"Object with constant acceleration\",\"x\":[0.0,0.10101010101010101,0.20202020202020202,0.30303030303030304,0.40404040404040403,0.5050505050505051,0.6060606060606061,0.7070707070707071,0.8080808080808081,0.9090909090909091,1.0101010101010102,1.1111111111111112,1.2121212121212122,1.3131313131313131,1.4141414141414141,1.5151515151515151,1.6161616161616161,1.7171717171717171,1.8181818181818181,1.9191919191919191,2.0202020202020203,2.121212121212121,2.2222222222222223,2.323232323232323,2.4242424242424243,2.525252525252525,2.6262626262626263,2.727272727272727,2.8282828282828283,2.929292929292929,3.0303030303030303,3.131313131313131,3.2323232323232323,3.3333333333333335,3.4343434343434343,3.5353535353535355,3.6363636363636362,3.7373737373737375,3.8383838383838382,3.9393939393939394,4.040404040404041,4.141414141414141,4.242424242424242,4.343434343434343,4.444444444444445,4.545454545454545,4.646464646464646,4.747474747474747,4.848484848484849,4.94949494949495,5.05050505050505,5.151515151515151,5.252525252525253,5.353535353535354,5.454545454545454,5.555555555555555,5.656565656565657,5.757575757575758,5.858585858585858,5.959595959595959,6.0606060606060606,6.161616161616162,6.262626262626262,6.363636363636363,6.4646464646464645,6.565656565656566,6.666666666666667,6.767676767676767,6.8686868686868685,6.96969696969697,7.070707070707071,7.171717171717171,7.2727272727272725,7.373737373737374,7.474747474747475,7.575757575757575,7.6767676767676765,7.777777777777778,7.878787878787879,7.979797979797979,8.080808080808081,8.181818181818182,8.282828282828282,8.383838383838384,8.484848484848484,8.585858585858587,8.686868686868687,8.787878787878787,8.88888888888889,8.98989898989899,9.09090909090909,9.191919191919192,9.292929292929292,9.393939393939394,9.494949494949495,9.595959595959595,9.696969696969697,9.797979797979798,9.8989898989899,10.0],\"y\":[5.0,5.2071217222732376,5.424446485052545,5.651974288337925,5.889705132129374,6.1376390164268955,6.395775941230487,6.664115906540149,6.942658912355882,7.231404958677686,7.530354045505561,7.839506172839506,8.158861340679522,8.48841954902561,8.828180797877767,9.178145087235997,9.538312417100295,9.908682787470665,10.289256198347108,10.680032649729618,11.081012141618203,11.492194674012856,11.91358024691358,12.345168860320376,12.786960514233241,13.238955208652177,13.701152943577187,14.173553719008263,14.656157534945415,15.148964391388633,15.651974288337925,16.165187225793286,16.688603203754717,17.222222222222225,17.766044281195796,18.32006938067544,18.884297520661157,19.458728701152943,20.0433629221508,20.638200183654728,21.243240485664728,21.858483828180795,22.48393021120294,23.11957963473115,23.765432098765434,24.42148760330578,25.08774614835221,25.764207733904705,26.45087235996327,27.147740026527906,27.85481073359861,28.572084481175388,29.29956126925824,30.03724109784716,30.785123966942145,31.54320987654321,32.31149882665034,33.08999081726355,33.878685848382815,34.67758392000816,35.486685032139576,36.30598918477706,37.13549637792062,37.97520661157024,38.82511988572594,39.68523620038772,40.55555555555556,41.436077951229464,42.32680338740944,43.2277318640955,44.13886338128762,45.06019793898581,45.99173553719008,46.93347617590042,47.88541985511682,48.84756657483929,49.819916335067845,50.80246913580247,51.79522497704316,52.79818385878991,53.81134578104276,54.83471074380165,55.86827874706661,56.91204979083767,57.96602387511478,59.03020099989797,60.10458116518723,61.18916437098254,62.283950617283956,63.388939904091416,64.50413223140495,65.62952759922457,66.76512600755025,67.91092745638201,69.06693194571983,70.23313947556372,71.40955004591369,72.59616365676972,73.79298030813183,75.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"#C8D4E3\",\"linecolor\":\"#C8D4E3\",\"minorgridcolor\":\"#C8D4E3\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"#C8D4E3\",\"linecolor\":\"#C8D4E3\",\"minorgridcolor\":\"#C8D4E3\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"white\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#C8D4E3\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"white\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#EBF0F8\",\"linecolor\":\"#EBF0F8\",\"ticks\":\"\"},\"bgcolor\":\"white\",\"radialaxis\":{\"gridcolor\":\"#EBF0F8\",\"linecolor\":\"#EBF0F8\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"white\",\"gridcolor\":\"#DFE8F3\",\"gridwidth\":2,\"linecolor\":\"#EBF0F8\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#EBF0F8\"},\"yaxis\":{\"backgroundcolor\":\"white\",\"gridcolor\":\"#DFE8F3\",\"gridwidth\":2,\"linecolor\":\"#EBF0F8\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#EBF0F8\"},\"zaxis\":{\"backgroundcolor\":\"white\",\"gridcolor\":\"#DFE8F3\",\"gridwidth\":2,\"linecolor\":\"#EBF0F8\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#EBF0F8\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#DFE8F3\",\"linecolor\":\"#A2B1C6\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#DFE8F3\",\"linecolor\":\"#A2B1C6\",\"ticks\":\"\"},\"bgcolor\":\"white\",\"caxis\":{\"gridcolor\":\"#DFE8F3\",\"linecolor\":\"#A2B1C6\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#EBF0F8\",\"linecolor\":\"#EBF0F8\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#EBF0F8\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#EBF0F8\",\"linecolor\":\"#EBF0F8\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#EBF0F8\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Position-Time Plot with Constant Acceleration\"},\"xaxis\":{\"title\":{\"text\":\"Time (t) [s]\"}},\"yaxis\":{\"title\":{\"text\":\"Position (x) [m]\"}},\"hovermode\":\"x\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('984a2fbf-7e4f-446a-b1cf-21d0cce070f5');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# Time values from 0 to 10 seconds\n",
    "t = np.linspace(0, 10, 100)\n",
    "\n",
    "# Initialize the position array\n",
    "x = np.zeros_like(t)\n",
    "\n",
    "# Initial conditions\n",
    "x0 = 5  # Initial position\n",
    "v0 = 2  # Initial velocity\n",
    "a = 1   # Acceleration\n",
    "\n",
    "# Calculate position with acceleration\n",
    "for i in range(len(t)):\n",
    "    x[i] = _____ + _____ * t[i] + 0.5 * _____ * t[i]**2  # Position with acceleration\n",
    "\n",
    "# Create the plotly figure\n",
    "fig = go.Figure()\n",
    "\n",
    "# Add the position-time data to the plot\n",
    "fig.add_trace(go.Scatter(x=t, y=x, mode='lines', name='Object with constant acceleration'))\n",
    "\n",
    "# Add axis labels and title\n",
    "fig.update_layout(\n",
    "    title=\"Position-Time Plot with Constant Acceleration\",\n",
    "    xaxis_title=\"Time (t) [s]\",\n",
    "    yaxis_title=\"Position (x) [m]\",\n",
    "    hovermode=\"x\",\n",
    "    template=\"plotly_white\"\n",
    ")\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "205ba098-72c8-4019-9b3f-a93eb48955d9",
   "metadata": {},
   "source": [
    "## üöóüí® Exercise: Car A and Car B - Chasing Scenario\n",
    "\n",
    "### üèÅ Scenario:\n",
    "Car A is moving with a constant velocity $v_a$ when it passes by Car B, which is initially at rest. As soon as Car A passes by, Car B starts accelerating with a constant acceleration $a_b$ to chase Car A.\n",
    "\n",
    "Your task is to simulate this scenario using Python and determine the time and location at which Car B catches up to Car A.\n",
    "\n",
    "### üìã Instructions:\n",
    "\n",
    "1. **Set Up the Problem:**\n",
    "   - Car A moves with a constant velocity $v_a = 5 \\, \\text{m/s}$.\n",
    "   - Car B starts from rest ($v_0 = 0$) and accelerates with $a_b = 2 \\, \\text{m/s}^2$.\n",
    "\n",
    "2. **Calculate the Position:**\n",
    "   - The position of Car A as a function of time $t$ can be described by:\n",
    "     $$\n",
    "     x_a(t) = v_a \\cdot t\n",
    "     $$\n",
    "   - The position of Car B as a function of time $t$ can be described by:\n",
    "     $$\n",
    "     x_b(t) = \\frac{1}{2} a_b \\cdot t^2\n",
    "     $$\n",
    "\n",
    "3. **Determine When the Cars Meet:**\n",
    "   - Find the time $t$ and position $x$ where $x_a(t) = x_b(t)$.\n",
    "\n",
    "### üßë‚Äçüíª Python Code:\n",
    "\n",
    "Fill in the gaps to simulate this scenario:\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "c61c887e-6ec2-4fe9-88fa-cdddfe41f20c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Given values\n",
    "v_a = ___  # Velocity of Car A (m/s)\n",
    "a_b = ___  # Acceleration of Car B (m/s^2)\n",
    "\n",
    "# Time values\n",
    "t = ___  # Adjust the time range if needed\n",
    "\n",
    "# Position of Car A\n",
    "x_a = ___\n",
    "\n",
    "# Position of Car B\n",
    "x_b = ___\n",
    "\n",
    "# Find the time and position where they meet\n",
    "for i in range(len(t)):\n",
    "    if x_b[i] >= x_a[i] and ___:\n",
    "        t_meet = t[i]\n",
    "        x_meet = x_a[i]\n",
    "        break\n",
    "\n",
    "# Plot the positions of both cars\n",
    "plt.plot(t, x_a, label=\"Car A (constant speed)\")\n",
    "plt.plot(t, x_b, label=\"Car B (accelerating)\")\n",
    "plt.scatter(t_meet, x_meet, color='red', label=f\"Meeting Point: t={t_meet:.2f} s, x={x_meet:.2f} m\")\n",
    "\n",
    "# Adding labels and title\n",
    "plt.xlabel(\"Time (s)\")\n",
    "plt.ylabel(\"Position (m)\")\n",
    "plt.title(\"Position-Time Graph for Car A and Car B\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n",
    "\n",
    "# Output the time and position where they meet\n",
    "print(f\"Car B catches up with Car A at t = {t_meet:.2f} seconds, at position x = {x_meet:.2f} meters.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bdff4354-b787-4439-9ad5-a1fb1b5fc815",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
